parameters:
  jenkins:
    client:
      plugin:
        gerrit-trigger: {}
      job:
        test_metaswitch_vnf:
            type: workflow-scm
            name: test_metaswitch_vnf_ee
            display_name: "Onboarding tests for Metaswitch vSBC VNF against CFY Enterprise Edition"
            discard:
              build:
                keep_num: 20
            scm:
              type: git
              url: "${_param:jenkins_gerrit_url}/vnf-onboarding/pipelines"
              credentials:  "${_param:vnf_gerrit_credentials}"
              script: test_vnf_onboarding.groovy
            trigger:
              gerrit:
                project:
                  "vnf-onboarding/metaswitch-vsbc":
                    branches:
                      - compare_type: "ANT"
                        name: "**"
                event:
                  patchset:
                    - created:
                        excludeDrafts: false
                        excludeTrivialRebase: false
                        excludeNoCodeChange: false
                  change:
                    - merged
                  comment:
                    - addedContains:
                        commentAddedCommentContains: '(retest|recheck|reverify)'
            param:
              DEFAULT_GIT_URL:
                type: string
                description: "Run against alternate system reclass"
                default: "${_param:jenkins_gerrit_url}/vnf-onboarding/metaswitch-vsbc"
              DEFAULT_GIT_REF:
                type: string
                default: master
              OPENSTACK_API_URL:
                type: string
                default: ${_param:vnf_openstack_api_url}"
              OPENSTACK_API_CREDENTIALS:
                type: string
                default: "${_param:vnf_openstack_api_credentials}"
              OPENSTACK_API_TENANT:
                type: string
                default: "test-metaswitch"
              GERRIT_CREDENTIALS:
                type: string
                default: "${_param:vnf_gerrit_credentials}"
              ELASTIC_URL:
                type: string
                default: "${_param:vnf_elastic_url}"
              DEBUG_OPTIONS:
                type: string
                default: "skip_inspection=1"
                description: "Example: skip_all=1 skip_deploy=1 skip_inspection=1"
              NFV_PLATFORM_REPO:
                type: string
                description: "Take Cloudify blueprints, Dockerfile and CI scripts from this repo"
                default: "ssh://mcp-gerrit@gerrit.mcp.mirantis.net:29418/vnf-onboarding/nfv-platform"
              NFV_PLATFORM_REPO_BRANCH:
                type: string
                default: "master"
              NFV_PLATFORM_REPO_CREDENTIALS:
                type: string
                default: "${_param:vnf_gerrit_credentials}"
              CONTRAIL_ENABLED:
                type: boolean
                default: false
              CONTRAIL_API_URL:
                type: string
                default: "${_param:contrail_api_url}"
              SETUP_OWN_CLOUDIFY:
                type: boolean
                description: "Use temporary private Cloudify instance. Metaswitch vSBC can work only with its own CFY instance"
                default: true
              CLOUDIFY_MANAGER_IP:
                type: string
                description: "IP address of external Cloudify. \"auto\" refers to address of deploy_cloudify_enterprise job Cloudify instance"
                default: "auto"
              CLOUDIFY_MANAGER_OPTIONS:
                type: string
                description: "Parameters for cloudify manager VM. Can be skipped if cloudify predeployed."
                default: "CFM_IMAGE=cloudify-manager-4.3.1ga CFM_FLAVOR=cfy.mngr CFM_DISK_SIZE=80 CFM_SUBNET_CIDR=10.10.1.1/24 CFM_SUBNET_DNS=172.19.0.6 EXTERNAL_NET=public "
              CFM_SSH_KEY_ID:
                type: string
                description: "Credentials ID of ssh key for connection to Cloudify"
                default: "${_param:vnf_openstack_ssh_key_credentials}"
              CLOUDIFY_AGENT_OPTIONS:
                type: string
                description: "Parameters for cloudify agent VMs."
                default: "CFY_AGENT_NET=cfm-net-shared CFY_AGENT_FLAVOR=cfy.agent CFY_AGENT_BACKEND_FLAVOR=backend.metaswitch CFY_AGENT_IMAGE=agent_vm CFY_AGENT_BASE_IMAGE=base_agent_vm CFY_AGENT_BACKEND_IMAGE=base_backend_vm"
              CLOUDIFY_MANAGER_VERSION:
                type: choice
                choices:
                 - enterprise
                 - community
                default: "enterprise"
                description: "CFY edition version, make sure that it is consistent with CFY Manager image"
              VNF_ARTIFACTORY_URL:
                type: string
                default: "${_param:vnf_artifactory_url}"
              VNF_ARTIFACTORY_PLUGINS_DIR:
                type: string
                default: "${_param:vnf_artifactory_url}/cloudify/plugins/"
              VNF_DOCKER_REGISTRY_PATH:
                type: string
                default: "${_param:vnf_docker_registry_path}"
              VNF_DOCKER_CLI_TAG:
                type: string
                default: "latest"
              VNF_DOCKER_SCRUN_TAG:
                type: string
                description: "Not in use for this job"
                default: "latest"
              VNF_PLUGINS:
                type: string
                description: "Plugins to fetch from artifactory and install during build package step"
                default: "vnf_onboarding_tools-0.2-py27-none-linux_x86_64_CentOS_Core, cloudify_diamond_plugin-1.3.8-py27-none-linux_x86_64-centos-Core, metaswitch_deployment_plugin-2.1.0-py27-none-linux_x86_64-centos-Core"
              VNF_OPTIONS:
                type: string
                default: "METASWITCH_VSBS_BPS=mirantis-blueprint-insecure-withoutsas-newlicense.tar DCM_IMAGE_NAME=MSwVA-DCM-V3.3 MDM_IMAGE_NAME=MSwVA-MDM-centos PERIMETA_IMAGE_NAME=MSwVA-Perimeta-V4.3.50_SU42_P252"
              VNF_DOCKER_CLI_PLATFORM:
                type: string
                default: "ubuntu"
              VNF_DEPLOYMENT_TIMEOUT:
                type: string
                description: "Set up timeout for cloudify deployment (depends on each VNF specific and network throughput)."
                default: 7200


        platform_validation_pipeline:
          type: workflow-scm
          name: platform_validation_pipeline
          display_name: "Validate OpenStack platform before deploy of VNF"
          discard:
            build:
              keep_num: 20
          scm:
            type: git
            url: "${_param:jenkins_gerrit_url}/vnf-onboarding/pipelines"
            credentials: "${_param:vnf_gerrit_credentials}"
            script: test_platform.groovy
          param:
            OPENSTACK_API_CREDENTIALS:
              type: string
              description: "OpenStack admin user credentials for running tests"
              default: "${_param:vnf_openstack_api_credentials}"
            OS_PROJECT_NAME:
              type: string
              description: "OpenStack project name for running tests"
              default: "platform-test"
            OS_AUTH_URL:
              type: string
              description: "OpenStack auth url"
              default: "http://${_param:openstack_control_address}:35357/v3"
            IMAGE_ID:
              type: string
              description: "Specify image id to execute tests against custom images"
              default: ""
            FLAVOR_ID:
              type: string
              description: "Specify flavor id to execute tests against custom images"
              default: ""
            MIN_COMPUTE_NODES:
              type: string
              description: "Specify number of compute nodes of environment"
              default: '2'
            FIXED_SHARED_NETWORK_NAME:
              type: string
              description: "Shared network that will be used in tests."
              default: "test-shared"
            COMPUTE_NODE_HOST_NAME:
              type: string
              description: "To run CPU pinning/NUMA topology tests against specific node"
              default: ''
            COMPUTE_AVAILABILITY_ZONE:
              type: string
              description: "To run CPU pinning/NUMA topology tests against specific node"
              default: 'nova'
            COMPUTE_NUMA_NODE_COUNT:
              type: string
              description: "Number of NUMA node for NUMA topology testing."
              default: '2'
            IMAGE_SSH_USER:
              type: string
              description: "Specify user name to login in test OpenStack VMs"
              default: "cirros"
            VNF_PLATFORM_TESTS_REPO:
              type: string
              description: "Repository with testing framework"
              default: "${_param:jenkins_gerrit_url}vnf-onboarding/platform-tests"
            VNF_PLATFORM_TESTS_BRANCH:
              type: string
              default: "master"
            VNF_PLATFORM_TESTS_REPO_CREDENTIALS:
              type: string
              default: "${_param:vnf_gerrit_credentials}"
            TEMPEST_IMAGE_DOCKER_REGISTRY_PATH:
              type: string
              description: "Path for docker image with testing tool.  If empty, image will be build using VNF_PLATFORM_TESTS_* parameters."
              default: ${_param:vnf_docker_registry_path}
            TEMPEST_IMAGE_NAME:
              type: string
              description: "Name of docker image with testing tool"
              default: "platform_tests:latest"
            ELASTIC_URL:
              type: string
              description: "URL to elastic search API"
              default: "${_param:vnf_elastic_url}"
            ELASTIC_TRANSFER_REPO:
              type: string
              description: "Repository with scripts for transfering test results to elastic search"
              default: "${_param:jenkins_gerrit_url}/vnf-onboarding/nfv-platform"
            ELASTIC_TRANSFER_REPO_CREDENTIALS:
              type: string
              default: "${_param:vnf_gerrit_credentials}"
            ELASTIC_TRANSFER_REPO_BRANCH:
              type: string
              default: "master"
            DOCKER_TEMPEST_PARAMS:
              type: string
              description: "Pass custom parameters for tempest container"
              default: ""

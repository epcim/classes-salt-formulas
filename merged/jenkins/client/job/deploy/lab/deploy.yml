parameters:
  _param:
    mcp_docker_registry: 'docker-prod-local.artifactory.mirantis.com'
    jenkins_deploy_jobs: []
    heat_stack_zone_job_param:
      type: string
      default: "mcp-mk"
    openstack_api_projects_job_param:
      type: string
      default: "mcp-mk"
  jenkins:
    client:
      job_template:
        deploy_template:
          name: deploy-{{stack_type}}-{{stack_name}}
          jobs: ${_param:jenkins_deploy_jobs}
          template:
            type: workflow-scm
            discard:
              build:
                keep_num: 100
            concurrent: true
            display_name: "Deploy - {{stack_name}} {{stack_type}}"
            scm:
              type: git
              url: "${_param:jenkins_gerrit_url}/mk/mk-pipelines"
              branch: "${_param:jenkins_pipelines_branch}"
              credentials: "gerrit"
              script: cloud-deploy-pipeline.groovy
            trigger:
              timer:
                spec: "{{job_timer}}"
            param:
              # general parameters
              ASK_ON_ERROR:
                type: boolean
                default: 'false'
              SLAVE_NODE:
                type: string
                default: 'python'

              # deployments
              STACK_NAME:
                type: string
                description: Heat stack name. Will be generated if missing.
              STACK_TYPE:
                type: string
                default: "{{stack_type}}"
              STACK_INSTALL:
                type: string
                default: "{{stack_install}}"
              STACK_TEST:
                type: string
                default: "{{stack_test}}"
              STACK_REUSE:
                type: boolean
                default: 'false'
              STACK_DELETE:
                type: boolean
                default: 'true'
                description: "Don't enable it if you need to use the lab after"
              STACK_COMPUTE_COUNT:
                type: string
                default: '2'
              STACK_CLUSTER_NAME:
                type: string
                default: ""
                description: "Cluster name to use from reclass"

              STACK_TEMPLATE:
                type: string
                default: "{{stack_name}}"
              STACK_TEMPLATE_URL:
                type: string
                default: "${_param:jenkins_gerrit_url}/mk/heat-templates"
              STACK_TEMPLATE_CREDENTIALS:
                type: string
                default: "gerrit"
              STACK_TEMPLATE_BRANCH:
                type: string
                default: "master"
              STACK_CLEANUP_JOB:
                type: string
                default: 'deploy-stack-cleanup'

              STACK_RECLASS_ADDRESS:
                type: string
                default: ""
              STACK_RECLASS_BRANCH:
                type: string
                default: ""

              # salt
              EXTRA_TARGET:
                type: string
                default: ""
                description: "Salt extra target for edge clouds deployment"
              SALT_MASTER_CREDENTIALS:
                type: string
                default: "salt-qa-credentials"
              SALT_MASTER_URL:
                type: string
                default: ""
              SALT_OVERRIDES:
                type: text
                default: ""
                description: "YAML with overrides for Salt deployment"
              SALT_VERSION:
                type: text
                default: "stable 2017.7"
                description: "Version of Salt which is going to be installed i.e. 'stable 2016.3' or 'stable 2017.7' etc. Warning: This value doesn't override salt_version parameter set in the pillar."
              BOOTSTRAP_EXTRA_REPO_PARAMS:
                type: string
                default: ""
                description: "Defines a list of extra repos with parameters, format: repo 1, repo priority 1, repo pin 1; repo 2, repo priority 2, repo pin 2"
              FORMULA_PKG_REVISION:
                type: string
                default: ""
                description: "Formulas revision to install on Salt Master bootstrap stage"
              STATIC_MGMT_NETWORK:
                  type: boolean
                  default: 'false'
                  description: "Check if model contains static IP address definitions for all nodes"

              # aws api
              AWS_STACK_REGION:
                type: string
                default: "eu-central-1"
              AWS_API_CREDENTIALS:
                type: string
                default: "aws-credentials"
              AWS_SSH_KEY:
                type: string
                default: "jenkins-mk"

              # heat
              HEAT_STACK_ENVIRONMENT:
                type: string
                default: "{{stack_env}}"
              HEAT_STACK_ZONE: ${_param:heat_stack_zone_job_param}
              HEAT_STACK_PUBLIC_NET:
                type: string
                default: "public"

              # openstack api
              OPENSTACK_API_URL:
                type: string
                default: "https://cloud-cz.bud.mirantis.net:5000"
              OPENSTACK_API_CREDENTIALS:
                type: string
                default: "openstack-devcloud-credentials"
              OPENSTACK_API_PROJECT: ${_param:openstack_api_projects_job_param}
              OPENSTACK_API_PROJECT_DOMAIN:
                type: string
                default: "default"
              OPENSTACK_API_PROJECT_ID:
                type: string
                default: ""
              OPENSTACK_API_USER_DOMAIN:
                type: string
                default: "default"

              OPENSTACK_API_CLIENT:
                type: string
                default: ""
              OPENSTACK_API_VERSION:
                type: string
                default: "3"

              # test
              TEST_K8S_API_SERVER:
                type: string
                default: "http://127.0.0.1:8080"
              TEST_K8S_CONFORMANCE_IMAGE:
                type: string
                default: "docker-prod-virtual.docker.mirantis.net/mirantis/kubernetes/k8s-conformance:v1.10.4-4"

              TEST_TEMPEST_IMAGE:
                type: string
                description: "Tempest docker image"
                default: "${_param:mcp_docker_registry}/mirantis/oscore/rally-tempest"
              TEST_TEMPEST_TARGET:
                type: string
                description: "Node to run tests"
                default: ""
              TEST_DOCKER_INSTALL:
                type: boolean
                description: "Install docker on the target if true"
                default: "true"
              TEST_TEMPEST_PATTERN:
                type: string
                description: "Run tests matched to pattern only"
                default: ""

              # TestRail vars
              TESTRAIL_REPORT:
                type: boolean
                description: "Report test results to TestRail if true"
                default: "false"
              TESTRAIL_REPORTER_IMAGE:
                type: string
                description: "Testrail reporter docker image"
                default: "alrem/xunit2testrail"
              TESTRAIL_QA_CREDENTIALS:
                type: string
                description: "Credentials for results upload to testrail"
                default: "oscore-qa-credentials"
              TESTRAIL_MILESTONE:
                type: string
                description: "TestRail milestone"
                default: "MCP1.1"
              TESTRAIL_PLAN:
                type: string
                description: "TestRail test plan name. Will be generated if missing."
                default: ""
              TESTRAIL_GROUP:
                type: string
                description: "TestRail test group name."
                default: "{{stack_name}}"
              TESTRAIL_SUITE:
                type: string
                description: "TestRail test suite name"
                default: "Tempest 16.0.0 with designate tests"

classes:
- kubernetes.logging
- kubernetes.monitoring
parameters:
  _param:
    kubelet_fail_on_swap: true
    kubernetes_calico_calicoctl_image: ${_param:kubernetes_calico_calicoctl_repo}/ctl:v3.1.3
    kubernetes_calico_calicoctl_repo: ${_param:mcp_docker_registry}/mirantis/projectcalico/calico
    kubernetes_calico_cni_image: ${_param:kubernetes_calico_cni_repo}/cni:v3.1.3
    kubernetes_calico_cni_repo: ${_param:mcp_docker_registry}/mirantis/projectcalico/calico
    kubernetes_calico_enabled: false
    kubernetes_calico_image: ${_param:kubernetes_calico_repo}/node:v3.1.3
    kubernetes_calico_kube_controllers_image: ${_param:kubernetes_calico_kube_ctl_repo}/kube-controllers:v3.1.3
    kubernetes_calico_kube_ctl_repo: ${_param:mcp_docker_registry}/mirantis/projectcalico/calico
    kubernetes_calico_repo: ${_param:mcp_docker_registry}/mirantis/projectcalico/calico
    kubernetes_cluster_domain: ${_param:cluster_domain}
    kubernetes_cniplugins_repo: https://docker-prod-local.artifactory.mirantis.com/artifactory/binary-prod-local/mirantis/kubernetes/containernetworking-plugins
    kubernetes_cniplugins_source: ${_param:kubernetes_cniplugins_repo}/cni-plugins_v0.7.1-48-g696b1f9.tar.gz
    kubernetes_cniplugins_source_hash: md5=5ec1cf5e989097c6127ea5365e277b02
    kubernetes_contrail_cni_image: ${_param:kubernetes_contrail_cni_repo}/contrail-cni:v1.2.0
    kubernetes_contrail_cni_repo: ${_param:mcp_docker_registry}/mirantis/kubernetes
    kubernetes_contrail_network_controller_enabled: false
    kubernetes_contrail_network_controller_image: ${_param:kubernetes_contrail_network_controller_repo}/contrail-network-controller:v1.2.0
    kubernetes_contrail_network_controller_repo: ${_param:mcp_docker_registry}/mirantis/kubernetes/contrail-integration
    kubernetes_coredns_enabled: true
    kubernetes_coredns_image: ${_param:kubernetes_coredns_repo}/coredns:v1.2.2-12
    kubernetes_coredns_repo: ${_param:mcp_docker_registry}/mirantis/coredns
    kubernetes_criproxy_checksum: md5=371cacd3d8568eb88425498b48a649dd
    kubernetes_criproxy_version: v0.12.0
    kubernetes_dashboard_enabled: true
    kubernetes_dashboard_image: ${_param:kubernetes_dashboard_repo}/kubernetes-dashboard-amd64:v1.10.0-4
    kubernetes_dashboard_repo: ${_param:mcp_docker_registry}/mirantis/kubernetes
    kubernetes_dns_autoscaler_image: ${_param:kubernetes_kubedns_repo}/cluster-proportional-autoscaler-amd64:1.0.0
    kubernetes_dnsmasq_image: ${_param:kubernetes_kubedns_repo}/k8s-dns-dnsmasq-amd64:1.14.5
    kubernetes_docker_package: docker-engine=1.13.1-0~ubuntu-xenial
    kubernetes_externaldns_enabled: false
    kubernetes_externaldns_image: ${_param:kubernetes_externaldns_repo}/external-dns:v0.5.3
    kubernetes_externaldns_provider: coredns
    kubernetes_externaldns_repo: mirantis
    kubernetes_flannel_enabled: false
    kubernetes_flannel_image: ${_param:kubernetes_flannel_repo}/flannel:v0.10.0-amd64
    kubernetes_flannel_repo: quay.io/coreos
    kubernetes_fluentd_aggregator_config_forward_input_bind_port: 24224
    kubernetes_fluentd_aggregator_config_general_time_format: '%Y-%m-%dT%H:%M:%S.%N%z'
    kubernetes_fluentd_aggregator_config_output_buffer_chunk_limit: 2m
    kubernetes_fluentd_aggregator_config_output_buffer_queue_limit: 32
    kubernetes_fluentd_aggregator_config_output_es_host: 127.0.0.1
    kubernetes_fluentd_aggregator_config_output_es_port: 9200
    kubernetes_fluentd_aggregator_config_output_es_scheme: http
    kubernetes_fluentd_aggregator_config_output_flush_interval: 10s
    kubernetes_fluentd_aggregator_config_output_log_level: info
    kubernetes_fluentd_aggregator_config_output_logstash_dateformat: '%Y.%m.%d'
    kubernetes_fluentd_aggregator_config_output_logstash_format: true
    kubernetes_fluentd_aggregator_config_output_logstash_prefix: log
    kubernetes_fluentd_aggregator_config_output_max_retry_wait: 30
    kubernetes_fluentd_aggregator_config_output_num_threads: 8
    kubernetes_fluentd_aggregator_config_output_request_timeout: 10s
    kubernetes_fluentd_aggregator_config_systemd_filter_docker_parse_format: /^time="(?<time>[^)]*)"
      level=(?<severity>[^ ]*) msg="(?<message>[^"]*)"( err="(?<error>[^"]*)")?( statusCode=($<status_code>\d+))?/
    kubernetes_fluentd_aggregator_image: fluent/fluentd-kubernetes-daemonset:v1.2-debian-elasticsearch
    kubernetes_fluentd_aggregator_resources_limits_memory: 500Mi
    kubernetes_fluentd_aggregator_resources_requests_memory: 500Mi
    kubernetes_fluentd_enabled: false
    kubernetes_fluentd_logger_config_forward_output_ack_response_timeout: 30
    kubernetes_fluentd_logger_config_forward_output_buffer_chunk_limit: 2M
    kubernetes_fluentd_logger_config_forward_output_buffer_queue_limit: 32
    kubernetes_fluentd_logger_config_forward_output_expire_dns_cache: 15
    kubernetes_fluentd_logger_config_forward_output_flush_interval: 5s
    kubernetes_fluentd_logger_config_forward_output_hard_timeout: 10s
    kubernetes_fluentd_logger_config_forward_output_heartbeat_interval: 1s
    kubernetes_fluentd_logger_config_forward_output_heartbeat_type: tcp
    kubernetes_fluentd_logger_config_forward_output_max_retry_wait: 15
    kubernetes_fluentd_logger_config_forward_output_num_threads: 8
    kubernetes_fluentd_logger_config_forward_output_phi_threshold: 16
    kubernetes_fluentd_logger_config_forward_output_recover_wait: 10s
    kubernetes_fluentd_logger_config_forward_output_require_ack_response: true
    kubernetes_fluentd_logger_config_forward_output_send_timeout: 10s
    kubernetes_fluentd_logger_config_kubernetes_input_time_format: '%Y-%m-%dT%H:%M:%S.%NZ'
    kubernetes_fluentd_logger_image: fluent/fluentd-kubernetes-daemonset:v1.2-debian-stackdriver
    kubernetes_fluentd_logger_resources_limits_memory: 500Mi
    kubernetes_fluentd_logger_resources_requests_memory: 500Mi
    kubernetes_fluentd_namespace: stacklight
    kubernetes_genie_enabled: false
    kubernetes_genie_repo: https://docker-prod-local.artifactory.mirantis.com/artifactory/binary-prod-local/mirantis/kubernetes/cni-genie
    kubernetes_genie_source: ${_param:kubernetes_genie_repo}/genie_v1.0-138-gbf5dbaa
    kubernetes_genie_source_hash: md5=b024052ed4ecb1d5354e0cc8f51afaca
    kubernetes_hyperkube_image: ${_param:kubernetes_hyperkube_repo}/hyperkube-amd64:v1.11.2-1
    kubernetes_hyperkube_repo: ${_param:mcp_docker_registry}/mirantis/kubernetes
    kubernetes_kubedns_enabled: false
    kubernetes_kubedns_image: ${_param:kubernetes_kubedns_repo}/k8s-dns-kube-dns-amd64:1.14.5
    kubernetes_kubedns_repo: gcr.io/google_containers
    kubernetes_metallb_controller_image: ${_param:kubernetes_metallb_repo}/controller:v0.7.3-2
    kubernetes_metallb_enabled: false
    kubernetes_metallb_repo: ${_param:mcp_docker_registry}/mirantis/metallb
    kubernetes_metallb_speaker_image: ${_param:kubernetes_metallb_repo}/speaker:v0.7.3-2
    kubernetes_netchecker_agent_image: ${_param:kubernetes_netchecker_agent_repo}/k8s-netchecker-agent:v1.2.2
    kubernetes_netchecker_agent_repo: mirantis
    kubernetes_netchecker_server_image: ${_param:kubernetes_netchecker_server_repo}/k8s-netchecker-server:v1.2.2
    kubernetes_netchecker_server_repo: mirantis
    kubernetes_opencontrail_enabled: false
    kubernetes_pause_image: ${_param:kubernetes_hyperkube_repo}/pause-amd64:v1.11.2-1
    kubernetes_sidecar_image: ${_param:kubernetes_kubedns_repo}/k8s-dns-sidecar-amd64:1.14.5
    kubernetes_sriov_enabled: false
    kubernetes_sriov_repo: https://docker-prod-local.artifactory.mirantis.com/artifactory/binary-prod-local/mirantis/kubernetes/sriov-cni
    kubernetes_sriov_source: ${_param:kubernetes_sriov_repo}/sriov_v0.3-8-g8b7ed98
    kubernetes_sriov_source_hash: md5=c0cc33202afd02e4cc44b977a8faf6e7
    kubernetes_telegraf_agent_collection_jitter: 2
    kubernetes_telegraf_agent_debug: false
    kubernetes_telegraf_agent_flush_interval: 10
    kubernetes_telegraf_agent_flush_jitter: 2
    kubernetes_telegraf_agent_interval: 15
    kubernetes_telegraf_agent_logfile: etc/telegraf/log
    kubernetes_telegraf_agent_metric_batch_size: 1000
    kubernetes_telegraf_agent_metric_buffer_limit: 10000
    kubernetes_telegraf_agent_omit_hostname: false
    kubernetes_telegraf_agent_precision: ms
    kubernetes_telegraf_agent_quiet: false
    kubernetes_telegraf_agent_round_interval: false
    kubernetes_telegraf_enabled: false
    kubernetes_telegraf_image: ${_param:mcp_docker_registry}/openstack-docker/telegraf:2018.8.0
    kubernetes_telegraf_namespace: stacklight
    kubernetes_telegraf_resources_limits_memory: 500Mi
    kubernetes_telegraf_resources_requests_memory: 500Mi
    kubernetes_virtlet_enabled: false
    kubernetes_virtlet_image: ${_param:kubernetes_virtlet_repo}/virtlet:v1.4.0
    kubernetes_virtlet_repo: mirantis
    kubernetes_virtlet_use_apparmor: false
    mcp_docker_registry: docker-prod-local.artifactory.mirantis.com
  docker:
    host:
      options:
        bip: 172.31.255.1/24
        storage-driver: overlay2
      pkgs:
      - ${_param:kubernetes_docker_package}
      - python-docker
  kubernetes:
    common:
      addons:
        contrail_network_controller:
          enabled: ${_param:kubernetes_contrail_network_controller_enabled}
          image: ${_param:kubernetes_contrail_network_controller_image}
          namespace: kube-system
        coredns:
          domain: cluster.local
          enabled: ${_param:kubernetes_coredns_enabled}
          etcd:
            base_image: quay.io/coreos/etcd
            operator_image: quay.io/coreos/etcd-operator:v0.5.2
            version: 3.1.8
          image: ${_param:kubernetes_coredns_image}
          namespace: kube-system
          server: 10.254.0.10
        dashboard:
          enabled: ${_param:kubernetes_dashboard_enabled}
          image: ${_param:kubernetes_dashboard_image}
        dns:
          autoscaler:
            enabled: true
            image: ${_param:kubernetes_dns_autoscaler_image}
          dnsmasq:
            cache-size: 1000
            log-facility: '-'
            no-resolv: null
            server: 127.0.0.1#10053
          dnsmasq_image: ${_param:kubernetes_dnsmasq_image}
          domain: cluster.local
          enabled: ${_param:kubernetes_kubedns_enabled}
          kubedns_image: ${_param:kubernetes_kubedns_image}
          replicas: 1
          server: 10.254.0.10
          sidecar_image: ${_param:kubernetes_sidecar_image}
        externaldns:
          domain: ${_param:kubernetes_cluster_domain}
          enabled: ${_param:kubernetes_externaldns_enabled}
          image: ${_param:kubernetes_externaldns_image}
          namespace: kube-system
          provider: ${_param:kubernetes_externaldns_provider}
        flannel:
          image: ${_param:kubernetes_flannel_image}
        fluentd:
          aggregator:
            config:
              forward_input:
                bind:
                  port: ${_param:kubernetes_fluentd_aggregator_config_forward_input_bind_port}
              general:
                time_format: ${_param:kubernetes_fluentd_aggregator_config_general_time_format}
              output:
                buffer_chunk_limit: ${_param:kubernetes_fluentd_aggregator_config_output_buffer_chunk_limit}
                buffer_queue_limit: ${_param:kubernetes_fluentd_aggregator_config_output_buffer_queue_limit}
                es:
                  host: ${_param:kubernetes_fluentd_aggregator_config_output_es_host}
                  port: ${_param:kubernetes_fluentd_aggregator_config_output_es_port}
                  scheme: ${_param:kubernetes_fluentd_aggregator_config_output_es_scheme}
                flush_interval: ${_param:kubernetes_fluentd_aggregator_config_output_flush_interval}
                log_level: ${_param:kubernetes_fluentd_aggregator_config_output_log_level}
                logstash_dateformat: ${_param:kubernetes_fluentd_aggregator_config_output_logstash_dateformat}
                logstash_format: ${_param:kubernetes_fluentd_aggregator_config_output_logstash_format}
                logstash_prefix: ${_param:kubernetes_fluentd_aggregator_config_output_logstash_prefix}
                max_retry_wait: ${_param:kubernetes_fluentd_aggregator_config_output_max_retry_wait}
                num_threads: ${_param:kubernetes_fluentd_aggregator_config_output_num_threads}
                request_timeout: ${_param:kubernetes_fluentd_aggregator_config_output_request_timeout}
              systemd_filter:
                docker_parse_format: ${_param:kubernetes_fluentd_aggregator_config_systemd_filter_docker_parse_format}
            image: ${_param:kubernetes_fluentd_aggregator_image}
            resources:
              limits:
                memory: ${_param:kubernetes_fluentd_aggregator_resources_limits_memory}
              requests:
                memory: ${_param:kubernetes_fluentd_aggregator_resources_requests_memory}
          enabled: ${_param:kubernetes_fluentd_enabled}
          logger:
            config:
              forward_output:
                ack_response_timeout: ${_param:kubernetes_fluentd_logger_config_forward_output_ack_response_timeout}
                buffer_chunk_limit: ${_param:kubernetes_fluentd_logger_config_forward_output_buffer_chunk_limit}
                buffer_queue_limit: ${_param:kubernetes_fluentd_logger_config_forward_output_buffer_queue_limit}
                expire_dns_cache: ${_param:kubernetes_fluentd_logger_config_forward_output_expire_dns_cache}
                flush_interval: ${_param:kubernetes_fluentd_logger_config_forward_output_flush_interval}
                hard_timeout: ${_param:kubernetes_fluentd_logger_config_forward_output_hard_timeout}
                heartbeat_interval: ${_param:kubernetes_fluentd_logger_config_forward_output_heartbeat_interval}
                heartbeat_type: ${_param:kubernetes_fluentd_logger_config_forward_output_heartbeat_type}
                max_retry_wait: ${_param:kubernetes_fluentd_logger_config_forward_output_max_retry_wait}
                num_threads: ${_param:kubernetes_fluentd_logger_config_forward_output_num_threads}
                phi_threshold: ${_param:kubernetes_fluentd_logger_config_forward_output_phi_threshold}
                recover_wait: ${_param:kubernetes_fluentd_logger_config_forward_output_recover_wait}
                require_ack_response: ${_param:kubernetes_fluentd_logger_config_forward_output_require_ack_response}
                send_timeout: ${_param:kubernetes_fluentd_logger_config_forward_output_send_timeout}
              kubernetes_input:
                time_format: ${_param:kubernetes_fluentd_logger_config_kubernetes_input_time_format}
            image: ${_param:kubernetes_fluentd_logger_image}
            resources:
              limits:
                memory: ${_param:kubernetes_fluentd_logger_resources_limits_memory}
              requests:
                memory: ${_param:kubernetes_fluentd_logger_resources_requests_memory}
          namespace: ${_param:kubernetes_fluentd_namespace}
        heapster_influxdb:
          enabled: false
        helm:
          enabled: false
          tiller_image: gcr.io/kubernetes-helm/tiller:v2.4.2
        metallb:
          controller_image: ${_param:kubernetes_metallb_controller_image}
          enabled: ${_param:kubernetes_metallb_enabled}
          speaker_image: ${_param:kubernetes_metallb_speaker_image}
        netchecker:
          agent_image: mirantis/k8s-netchecker-agent:stable
          enabled: false
          interval: 60
          namespace: netchecker
          port: 80
          server_image: mirantis/k8s-netchecker-server:stable
        telegraf:
          agent:
            collection_jitter: ${_param:kubernetes_telegraf_agent_collection_jitter}
            debug: ${_param:kubernetes_telegraf_agent_debug}
            flush_interval: ${_param:kubernetes_telegraf_agent_flush_interval}
            flush_jitter: ${_param:kubernetes_telegraf_agent_flush_jitter}
            interval: ${_param:kubernetes_telegraf_agent_interval}
            logfile: ${_param:kubernetes_telegraf_agent_logfile}
            metric_batch_size: ${_param:kubernetes_telegraf_agent_metric_batch_size}
            metric_buffer_limit: ${_param:kubernetes_telegraf_agent_metric_buffer_limit}
            omit_hostname: ${_param:kubernetes_telegraf_agent_omit_hostname}
            precision: ${_param:kubernetes_telegraf_agent_precision}
            quiet: ${_param:kubernetes_telegraf_agent_quiet}
            round_interval: ${_param:kubernetes_telegraf_agent_round_interval}
          enabled: ${_param:kubernetes_telegraf_enabled}
          image: ${_param:kubernetes_telegraf_image}
          resources:
            limits:
              memory: ${_param:kubernetes_telegraf_resources_limits_memory}
            requests:
              memory: ${_param:kubernetes_telegraf_resources_requests_memory}
        virtlet:
          criproxy_source: ${_param:kubernetes_criproxy_checksum}
          criproxy_version: ${_param:kubernetes_criproxy_version}
          enabled: ${_param:kubernetes_virtlet_enabled}
          image: ${_param:kubernetes_virtlet_image}
          namespace: kube-system
          use_apparmor: ${_param:kubernetes_virtlet_use_apparmor}
      cloudprovider:
        enabled: false
        params:
          domain_name: default
          region: RegionOne
        provider: openstack
      cluster_domain: ${_param:kubernetes_cluster_domain}
      cluster_name: ${_param:cluster_name}
      cni:
        plugins:
          hash: ${_param:kubernetes_cniplugins_source_hash}
          source: ${_param:kubernetes_cniplugins_source}
      hyperkube:
        image: ${_param:kubernetes_hyperkube_image}
        pause_image: ${_param:kubernetes_pause_image}
    pool:
      container: false
      enabled: false
      kubelet:
        fail_on_swap: ${_param:kubelet_fail_on_swap}
      network:
        calico:
          calicoctl_image: ${_param:kubernetes_calico_calicoctl_image}
          cni_image: ${_param:kubernetes_calico_cni_image}
          enabled: ${_param:kubernetes_calico_enabled}
          image: ${_param:kubernetes_calico_image}
          kube_controllers_image: ${_param:kubernetes_calico_kube_controllers_image}
        flannel:
          enabled: ${_param:kubernetes_flannel_enabled}
        genie:
          enabled: ${_param:kubernetes_genie_enabled}
          source: ${_param:kubernetes_genie_source}
          source_hash: ${_param:kubernetes_genie_source_hash}
        opencontrail:
          cni_image: ${_param:kubernetes_contrail_cni_image}
          enabled: ${_param:kubernetes_opencontrail_enabled}
        sriov:
          enabled: ${_param:kubernetes_sriov_enabled}
          source: ${_param:kubernetes_sriov_source}
          source_hash: ${_param:kubernetes_sriov_source_hash}

